part of 'translations.g.dart';

/// Flat map(s) containing all translations.
/// Only for edge cases! For simple maps, use the map function of this library.

extension on _TranslationsEn {
	Map<String, dynamic> _buildFlatMap() {
		return <String, dynamic>{
			'onboarding.welcome': ({required Object fullName}) => 'Welcome $fullName',
			'onboarding.bye': ({required Object firstName}) => 'Bye $firstName',
			'onboarding.pages.0.title': 'First Page',
			'onboarding.pages.0.content': 'First Page Content',
			'onboarding.pages.1.title': 'Second Page',
			'onboarding.greet': ({required GenderContext context, required Object lastName, required Object fullName, required Object firstName}) {
				switch (context) {
					case GenderContext.male: return 'Hello Mr $lastName and ${_root.onboarding.welcome(fullName: fullName)}';
					case GenderContext.female: return 'Hello Ms $lastName and ${_root.onboarding.bye(firstName: firstName)}';
				}
			},
			'onboarding.greet2': ({required GenderContext gender}) {
				switch (gender) {
					case GenderContext.male: return 'Hello Mr';
					case GenderContext.female: return 'Hello Ms';
				}
			},
			'onboarding.greetCombination': ({required Object lastName, required Object fullName, required Object firstName, required GenderContext context, required GenderContext gender}) => '${_root.onboarding.greet(lastName: lastName, fullName: fullName, firstName: firstName, context: context)}, ${_root.onboarding.greet2(gender: gender)}',
			'onboarding.welcomeLinkedPlural': ({required num count, required Object fullName, required Object firstName}) => 'Hello ${_root.group.users(count: count, fullName: fullName, firstName: firstName)}',
			'onboarding.welcomeLinkedContext': ({required Object lastName, required Object fullName, required Object firstName, required GenderContext context}) => 'Hello ${_root.onboarding.greet(lastName: lastName, fullName: fullName, firstName: firstName, context: context)}',
			'onboarding.welcomeFullLink': ({required num count, required Object fullName, required Object firstName, required Object lastName, required GenderContext context}) => 'Ultimate ${_root.onboarding.welcomeLinkedPlural(count: count, fullName: fullName, firstName: firstName)} and ${_root.onboarding.welcomeLinkedContext(lastName: lastName, fullName: fullName, firstName: firstName, context: context)}',
			'group.users': ({required num count, required Object fullName, required Object firstName}) => (_root._cardinalResolver ?? _pluralCardinalEn)(count,
				zero: 'No Users and ${_root.onboarding.welcome(fullName: fullName)}',
				one: 'One User',
				other: '$count Users and ${_root.onboarding.bye(firstName: firstName)}',
			),
			'end.stringPages.0': '1st Page',
			'end.stringPages.1': '2nd Page',
			'end.pages.0.unknown': 'Unknown Error',
			'end.pages.1.with space': 'An Error',
			'end.pages.1.with second space': 'An 2nd Error',
		};
	}
}

extension on _TranslationsDe {
	Map<String, dynamic> _buildFlatMap() {
		return <String, dynamic>{
			'onboarding.welcome': ({required Object fullName}) => 'Willkommen $fullName',
			'onboarding.bye': ({required Object firstName}) => 'TschÃ¼ss $firstName',
			'onboarding.pages.0.title': 'Erste Seite',
			'onboarding.pages.0.content': 'Erster Seiteninhalt',
			'onboarding.pages.1.title': 'Zweite Seite',
			'onboarding.greet': ({required GenderContext context, required Object lastName, required Object fullName, required Object firstName}) {
				switch (context) {
					case GenderContext.male: return 'Hallo Herr $lastName und ${_root.onboarding.welcome(fullName: fullName)}';
					case GenderContext.female: return 'Hallo Frau $lastName und ${_root.onboarding.bye(firstName: firstName)}';
				}
			},
			'onboarding.greet2': ({required GenderContext gender}) {
				switch (gender) {
					case GenderContext.male: return 'Hallo Herr';
					case GenderContext.female: return 'Hallo Frau';
				}
			},
			'onboarding.greetCombination': ({required Object lastName, required Object fullName, required Object firstName, required GenderContext context, required GenderContext gender}) => '${_root.onboarding.greet(lastName: lastName, fullName: fullName, firstName: firstName, context: context)}, ${_root.onboarding.greet2(gender: gender)}',
			'onboarding.welcomeLinkedPlural': ({required num count, required Object fullName, required Object firstName}) => 'Hallo ${_root.group.users(count: count, fullName: fullName, firstName: firstName)}',
			'onboarding.welcomeLinkedContext': ({required Object lastName, required Object fullName, required Object firstName, required GenderContext context}) => 'Hallo ${_root.onboarding.greet(lastName: lastName, fullName: fullName, firstName: firstName, context: context)}',
			'onboarding.welcomeFullLink': ({required num count, required Object fullName, required Object firstName, required Object lastName, required GenderContext context}) => 'Ultimative ${_root.onboarding.welcomeLinkedPlural(count: count, fullName: fullName, firstName: firstName)} and ${_root.onboarding.welcomeLinkedContext(lastName: lastName, fullName: fullName, firstName: firstName, context: context)}',
			'group.users': ({required num count, required Object fullName, required Object firstName}) => (_root._cardinalResolver ?? _pluralCardinalDe)(count,
				zero: 'Keine Nutzer und ${_root.onboarding.welcome(fullName: fullName)}',
				one: 'Ein Nutzer',
				other: '$count Nutzer und ${_root.onboarding.bye(firstName: firstName)}',
			),
			'end.stringPages.0': '1. Seite',
			'end.stringPages.1': '2. Seite',
			'end.pages.0.unknown': 'Unbekannter Fehler',
			'end.pages.1.with space': 'Ein Fehler',
			'end.pages.1.with second space': 'Ein 2. Fehler',
		};
	}
}
